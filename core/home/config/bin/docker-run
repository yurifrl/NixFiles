#!/usr/bin/env bash

# -i, --interactive                    Keep STDIN open even if not attached
# -t, --tty                            Allocate a pseudo-TTY

: "${IMAGE:?IMAGE Variable not set or empty}"
: "${BASENAME:=$(basename "$PWD")}"
: "${ENTRYPOINT:=""}"
: "${PARAMS:=""}"
: "${I:=true}"
: "${T:=true}"

[ "`tty`" = "not a tty" ] && I=false
[[ -t 0 ]] && T=true

DEFAULT_PARAMS="--rm \
--net=host \
$([ $T = true ] && echo '-t') \
$([ $I = true ] && echo '-i') \
-w /$BASENAME \
-v $PWD:/$BASENAME \
-v $HOME/:/root/ \
-v /tmp:/tmp \
-v /usr/bin/docker:/usr/bin/docker \
-v /var/run/docker.sock:/var/run/docker.sock \
-e AWS_SESSION_TOKEN \
-e AWS_ACCESS_KEY_ID \
-e AWS_SECRET_ACCESS_KEY \
-e AWS_DEFAULT_REGION \
--env-file <(env | grep AWS) \
$([ -z $ENTRYPOINT ] || echo --entrypoint=$ENTRYPOINT)"

OPTIONS=$(printf "%q " "$@")

COMMAND="docker run $DEFAULT_PARAMS $PARAMS $IMAGE $OPTIONS"

if [ $DEBUG ]; then
    echo "$COMMAND"
fi

eval "$COMMAND"
